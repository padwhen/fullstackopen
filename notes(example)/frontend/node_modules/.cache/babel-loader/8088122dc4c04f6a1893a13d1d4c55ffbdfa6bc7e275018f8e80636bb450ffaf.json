{"ast":null,"code":"var _jsxFileName = \"/Users/phatnguyen/Documents/GitHub/fullstackopen/notes(example)/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Note from './components/Note';\nimport noteService from './services/notes';\nimport Notification from './components/Notification';\nimport loginService from './services/login';\nimport LoginForm from './components/LoginForm';\nimport Togglable from './components/Togglable';\nimport NoteForm from './components/NoteForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [loginVisible, setLoginVisible] = useState(false);\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappuser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      noteService.setToken(user.token);\n    }\n  }, []);\n  const handleLogin = async event => {\n    event.preventDefault();\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedNoteappuser', JSON.stringify(user));\n      noteService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      setErrorMessage('Wrong credentials');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n  const addNote = noteObject => {\n    noteFormRef.current.toggleVisibility();\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes([...notes, returnedNote]);\n      setNewNote('');\n    });\n  };\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = {\n      ...note,\n      important: !note.important\n    };\n    noteService.update(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n    }).catch(error => {\n      setErrorMessage(`Note '${note.content}' was already removed from server`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    });\n  };\n  const loginForm = () => {\n    const hideWhenVisible = {\n      display: loginVisible ? 'none' : ''\n    };\n    const showWhenVisible = {\n      display: loginVisible ? '' : 'none'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: hideWhenVisible,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setLoginVisible(true),\n          children: \"log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: showWhenVisible,\n        children: [/*#__PURE__*/_jsxDEV(LoginForm, {\n          username: username,\n          password: password,\n          handleUsernameChange: _ref => {\n            let {\n              target\n            } = _ref;\n            return setUsername(target.value);\n          },\n          handlePasswordChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setPassword(target.value);\n          },\n          handleSubmit: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setLoginVisible(false),\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  };\n  const noteForm = () => /*#__PURE__*/_jsxDEV(Togglable, {\n    buttonLabel: \"new note\",\n    children: /*#__PURE__*/_jsxDEV(NoteForm, {\n      createNote: addNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [user === null && loginForm(), user && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [user.name, \" logged in\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), noteForm()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"Show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note,\n        toggleImportance: () => toggleImportanceOf(note.id)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"702HXo5q8W2CInZf0vTMkz7LGfg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Note","noteService","Notification","loginService","LoginForm","Togglable","NoteForm","jsxDEV","_jsxDEV","App","_s","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","loginVisible","setLoginVisible","getAll","then","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","login","setItem","stringify","exception","setTimeout","addNote","noteObject","noteFormRef","current","toggleVisibility","create","returnedNote","handleNoteChange","target","value","notesToShow","filter","note","important","toggleImportanceOf","id","find","n","changedNote","update","map","catch","error","content","loginForm","hideWhenVisible","display","showWhenVisible","children","style","onClick","fileName","_jsxFileName","lineNumber","columnNumber","handleUsernameChange","_ref","handlePasswordChange","_ref2","handleSubmit","noteForm","buttonLabel","createNote","message","name","toggleImportance","_c","$RefreshReg$"],"sources":["/Users/phatnguyen/Documents/GitHub/fullstackopen/notes(example)/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Note from './components/Note';\nimport noteService from './services/notes';\nimport Notification from './components/Notification';\nimport loginService from './services/login'\nimport LoginForm from './components/LoginForm';\nimport Togglable from './components/Togglable';\nimport NoteForm from './components/NoteForm';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [loginVisible, setLoginVisible] = useState(false)\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappuser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      noteService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async event => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({username, password})\n      window.localStorage.setItem('loggedNoteappuser', JSON.stringify(user))\n      noteService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const addNote = (noteObject) => {\n    noteFormRef.current.toggleVisibility()\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes([...notes, returnedNote]);\n      setNewNote('');\n    });\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n    noteService\n      .update(id, changedNote)\n        .then(returnedNote => {\n          setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n        })\n        .catch(error => {\n          setErrorMessage(\n            `Note '${note.content}' was already removed from server`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n  };\n\n  const loginForm = () => {\n    const hideWhenVisible = { display: loginVisible ? 'none' : ''}\n    const showWhenVisible = { display: loginVisible ? '' : 'none'}\n    return (\n      <div>\n        <div style={hideWhenVisible}>\n          <button onClick={() => setLoginVisible(true)}>log in</button>\n        </div>\n        <div style={showWhenVisible}>\n          <LoginForm \n          username={username} password={password}\n          handleUsernameChange={({target}) => setUsername(target.value)}\n          handlePasswordChange={({target}) => setPassword(target.value)}\n          handleSubmit={handleLogin} />\n          <button onClick={() => setLoginVisible(false)}>cancel</button>\n        </div>\n      </div>\n    )\n  }\n\n  const noteForm = () => (\n    <Togglable buttonLabel=\"new note\">\n      <NoteForm createNote={addNote} />\n      </Togglable>\n  )\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        {user === null && loginForm()}\n        {user && <div>\n          <p>{user.name} logged in</p>\n          {noteForm()}\n          </div>}\n      </div>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          Show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n          {notesToShow.map((note) => (\n            <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC0B,IAAI,EAAEC,OAAO,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAAC4B,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACdG,WAAW,CAAC0B,MAAM,EAAE,CAACC,IAAI,CAAEC,YAAY,IAAK;MAC1CjB,QAAQ,CAACiB,YAAY,CAAC;IACxB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN/B,SAAS,CAAC,MAAM;IACd,MAAMgC,cAAc,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC;IACvE,IAAIH,cAAc,EAAE;MAClB,MAAMP,IAAI,GAAGW,IAAI,CAACC,KAAK,CAACL,cAAc,CAAC;MACvCN,OAAO,CAACD,IAAI,CAAC;MACbtB,WAAW,CAACmC,QAAQ,CAACb,IAAI,CAACc,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAG,MAAMC,KAAK,IAAI;IACjCA,KAAK,CAACC,cAAc,EAAE;IACtB,IAAI;MACF,MAAMjB,IAAI,GAAG,MAAMpB,YAAY,CAACsC,KAAK,CAAC;QAACtB,QAAQ;QAAEE;MAAQ,CAAC,CAAC;MAC3DU,MAAM,CAACC,YAAY,CAACU,OAAO,CAAC,mBAAmB,EAAER,IAAI,CAACS,SAAS,CAACpB,IAAI,CAAC,CAAC;MACtEtB,WAAW,CAACmC,QAAQ,CAACb,IAAI,CAACc,KAAK,CAAC;MAChCb,OAAO,CAACD,IAAI,CAAC;MACbH,WAAW,CAAC,EAAE,CAAC;MACfE,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC,OAAOsB,SAAS,EAAE;MAClB1B,eAAe,CAAC,mBAAmB,CAAC;MACpC2B,UAAU,CAAC,MAAM;QACf3B,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EAED,MAAM4B,OAAO,GAAIC,UAAU,IAAK;IAC9BC,WAAW,CAACC,OAAO,CAACC,gBAAgB,EAAE;IACtCjD,WAAW,CAACkD,MAAM,CAACJ,UAAU,CAAC,CAACnB,IAAI,CAAEwB,YAAY,IAAK;MACpDxC,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEyC,YAAY,CAAC,CAAC;MAClCtC,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMuC,gBAAgB,GAAId,KAAK,IAAK;IAClCzB,UAAU,CAACyB,KAAK,CAACe,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,WAAW,GAAGzC,OAAO,GAAGJ,KAAK,GAAGA,KAAK,CAAC8C,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,SAAS,CAAC;EAE5E,MAAMC,kBAAkB,GAAIC,EAAE,IAAK;IACjC,MAAMH,IAAI,GAAG/C,KAAK,CAACmD,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACF,EAAE,KAAKA,EAAE,CAAC;IAC3C,MAAMG,WAAW,GAAG;MAAE,GAAGN,IAAI;MAAEC,SAAS,EAAE,CAACD,IAAI,CAACC;IAAU,CAAC;IAC3D1D,WAAW,CACRgE,MAAM,CAACJ,EAAE,EAAEG,WAAW,CAAC,CACrBpC,IAAI,CAACwB,YAAY,IAAI;MACpBxC,QAAQ,CAACD,KAAK,CAACuD,GAAG,CAACR,IAAI,IAAIA,IAAI,CAACG,EAAE,KAAKA,EAAE,GAAGH,IAAI,GAAGN,YAAY,CAAC,CAAC;IACnE,CAAC,CAAC,CACDe,KAAK,CAACC,KAAK,IAAI;MACdlD,eAAe,CACZ,SAAQwC,IAAI,CAACW,OAAQ,mCAAkC,CACzD;MACDxB,UAAU,CAAC,MAAM;QACf3B,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EACR,CAAC;EAED,MAAMoD,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,eAAe,GAAG;MAAEC,OAAO,EAAE/C,YAAY,GAAG,MAAM,GAAG;IAAE,CAAC;IAC9D,MAAMgD,eAAe,GAAG;MAAED,OAAO,EAAE/C,YAAY,GAAG,EAAE,GAAG;IAAM,CAAC;IAC9D,oBACEjB,OAAA;MAAAkE,QAAA,gBACElE,OAAA;QAAKmE,KAAK,EAAEJ,eAAgB;QAAAG,QAAA,eAC1BlE,OAAA;UAAQoE,OAAO,EAAEA,CAAA,KAAMlD,eAAe,CAAC,IAAI,CAAE;UAAAgD,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAS;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACzD,eACNxE,OAAA;QAAKmE,KAAK,EAAEF,eAAgB;QAAAC,QAAA,gBAC1BlE,OAAA,CAACJ,SAAS;UACVe,QAAQ,EAAEA,QAAS;UAACE,QAAQ,EAAEA,QAAS;UACvC4D,oBAAoB,EAAEC,IAAA;YAAA,IAAC;cAAC5B;YAAM,CAAC,GAAA4B,IAAA;YAAA,OAAK9D,WAAW,CAACkC,MAAM,CAACC,KAAK,CAAC;UAAA,CAAC;UAC9D4B,oBAAoB,EAAEC,KAAA;YAAA,IAAC;cAAC9B;YAAM,CAAC,GAAA8B,KAAA;YAAA,OAAK9D,WAAW,CAACgC,MAAM,CAACC,KAAK,CAAC;UAAA,CAAC;UAC9D8B,YAAY,EAAE/C;QAAY;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAC7BxE,OAAA;UAAQoE,OAAO,EAAEA,CAAA,KAAMlD,eAAe,CAAC,KAAK,CAAE;UAAAgD,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC1D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAEV,CAAC;EAED,MAAMM,QAAQ,GAAGA,CAAA,kBACf9E,OAAA,CAACH,SAAS;IAACkF,WAAW,EAAC,UAAU;IAAAb,QAAA,eAC/BlE,OAAA,CAACF,QAAQ;MAACkF,UAAU,EAAE1C;IAAQ;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEpC;EAED,oBACExE,OAAA;IAAAkE,QAAA,gBACElE,OAAA;MAAAkE,QAAA,EAAI;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACdxE,OAAA,CAACN,YAAY;MAACuF,OAAO,EAAExE;IAAa;MAAA4D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACvCxE,OAAA;MAAAkE,QAAA,GACGnD,IAAI,KAAK,IAAI,IAAI+C,SAAS,EAAE,EAC5B/C,IAAI,iBAAIf,OAAA;QAAAkE,QAAA,gBACPlE,OAAA;UAAAkE,QAAA,GAAInD,IAAI,CAACmE,IAAI,EAAC,YAAU;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI,EAC3BM,QAAQ,EAAE;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ,eACNxE,OAAA;MAAAkE,QAAA,eACElE,OAAA;QAAQoE,OAAO,EAAEA,CAAA,KAAM5D,UAAU,CAAC,CAACD,OAAO,CAAE;QAAA2D,QAAA,GAAC,OACtC,EAAC3D,OAAO,GAAG,WAAW,GAAG,KAAK;MAAA;QAAA8D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAC5B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL,eACNxE,OAAA;MAAAkE,QAAA,EACKlB,WAAW,CAACU,GAAG,CAAER,IAAI,iBACpBlD,OAAA,CAACR,IAAI;QAAe0D,IAAI,EAAEA,IAAK;QAACiC,gBAAgB,EAAEA,CAAA,KAAM/B,kBAAkB,CAACF,IAAI,CAACG,EAAE;MAAE,GAAzEH,IAAI,CAACG,EAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEV,CAAC;AAACtE,EAAA,CA3HID,GAAG;AAAAmF,EAAA,GAAHnF,GAAG;AA6HT,eAAeA,GAAG;AAAC,IAAAmF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}