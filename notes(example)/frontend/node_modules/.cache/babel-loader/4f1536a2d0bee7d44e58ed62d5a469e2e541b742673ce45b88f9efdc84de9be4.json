{"ast":null,"code":"var _jsxFileName = \"/Users/phatnguyen/Documents/GitHub/fullstackopen/notes(example)/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport noteService from './services/notes';\nimport Notification from './components/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [username, setUsername] = useState('');\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      important: Math.random() < 0.5\n    };\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes([...notes, returnedNote]);\n      setNewNote('');\n    });\n  };\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = {\n      ...note,\n      important: !note.important\n    };\n    noteService.update(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n    }).catch(error => {\n      setErrorMessage(`Note '${note.content}' was already removed from server`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"Show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note,\n        toggleImportance: () => toggleImportanceOf(note.id)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9Zw3SRWo6acg6Si0ypGKqwnVHDw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Note","noteService","Notification","jsxDEV","_jsxDEV","App","_s","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","getAll","then","initialNotes","addNote","event","preventDefault","noteObject","content","important","Math","random","create","returnedNote","handleNoteChange","target","value","notesToShow","filter","note","toggleImportanceOf","id","find","n","changedNote","update","map","catch","error","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","message","onClick","toggleImportance","onSubmit","onChange","type","_c","$RefreshReg$"],"sources":["/Users/phatnguyen/Documents/GitHub/fullstackopen/notes(example)/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport noteService from './services/notes';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('')\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      important: Math.random() < 0.5,\n    };\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes([...notes, returnedNote]);\n      setNewNote('');\n    });\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n    noteService\n      .update(id, changedNote)\n        .then(returnedNote => {\n          setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n        })\n        .catch(error => {\n          setErrorMessage(\n            `Note '${note.content}' was already removed from server`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          Show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n          {notesToShow.map((note) => (\n            <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\n          ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">Save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}